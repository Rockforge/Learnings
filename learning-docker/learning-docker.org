* Learning Docker
** Image vs Container
*** Image
    - Is the application we want to run
    - Binaries of the application we want to run
*** Container
    - Is an instance of the image running as a process
    - You can have many containers running off the same image
*** Example command: docker container run --publish 8080:80 nginx
**** Note: if you want to run as a daemon then you need to add '--detach'
    1. Downloaded an image 'nginx' from Docker Hub
    2. Started a new container from that image
    3. Opened a port 8080 on the host IP
    4. Routes that traffic to the container IR, port 80
** What happens in a 'docker container run'
   1. Looks for that image locally in image cache, doesn't find anything
   2. Then looks in remote image repository (defaults to Docker Hub)
   3. Downloads the latest version (nginx:latest by default)
   4. Creates a new container based on that image and prepares to start
   5. Give it a virtual IP on a private network inside docker engine
   6. Opens up a port 80 on host and forwards to port 80 in container
   7. Stars container by using the CMD in the image Dockerfile
** Container vs VM
*** Additional commands
    - ps aux :: List all processes
    - docker top :: List all processes inside of a container
*** Containers aren't mini-VM's
    - They are just processes
    - Limited to what resources they can access
    - Exit when process stops
** What's going on in containers
   - docker container top :: process list in one container
   - docker container inspect :: details of one container config
        - Shows metadata about the container (startup config, volumes, networking)
   - docker container stats :: performance stats of all containers
** Getting a shell inside containers
*** No SSH needed
*** Commands
   - docker container run -it :: start new contianer interactively
   - docker container exec -it :: run additional command in existing container
   - docker container start -ai :: start a stopped container
** Docker Networks: Concepts
   - Review of docker container run -p
   - For local dev/testing, networks usually "just work"
*** Docker Networks Defaults
    - Each container connected to a private virtual network "bridge"
    - Each virtual network routes through NAT firewall on host IP
    - All containers on a virtual network can talk to each other without -p
    - "Batteries included, but removable"
*** Commands
    - docker container port <container> :: shows port used by container
